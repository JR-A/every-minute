<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
<mapper namespace="kr.spring.board.customboard.dao.CustomPostMapper"> <!-- interface 전체 경로까지 모두 명시해야 자동매핑  -->
	
	<!-- 최근 게시글3개 목록 -->
	<select id="selectTop3PostList" resultType="customPostVO">
		SELECT * FROM 
			(SELECT p.post_num, p.board_num, p.mem_num, p.content, p.reg_date , p.uploadfile, p.filename, p.anonymous, b.title ,  ROW_NUMBER() OVER(ORDER BY post_num DESC) AS rank  
				FROM customPost p join customBoard b 
				on p.board_num=b.board_num)
		<![CDATA[
		where rank<=3
		]]>	
	</select>
	
	<!-- HOT게시물 (좋아요 10개 이상받은 게시글 중 top2) -->
	<select id="custom_hotPostTop2" resultType="customPostVO">
		SELECT * FROM 
		    (SELECT * FROM customPost p 
		        JOIN (SELECT post_num, COUNT(*) like_cnt  
		        	FROM customBoard_Like_Post 
	            		<![CDATA[
		        		GROUP BY post_num HAVING COUNT(*) >= 5) lp 
		        		]]>
		            ON p.post_num = lp.post_num 
				JOIN customBoard b 
		            ON p.board_num=b.board_num  
		        ORDER BY like_cnt DESC)
		     <![CDATA[
			 WHERE ROWNUM<=2 
			 ]]>
		 ORDER BY reg_date DESC
	</select>
	
	<!-- 게시글 목록 --> 
	<select id="selectPostList" parameterType="map" resultType="customPostVO"> <!-- 쿼리 실행 결과를  customBoardVO에  담는다-->
		SELECT * FROM
			(SELECT post.* FROM 
				(SELECT board.*, rownum rnum FROM
					(SELECT * FROM 
						CustomPost p  
                            LEFT OUTER JOIN (SELECT COUNT(*) comment_cnt, post_num  FROM customBoard_comment GROUP BY post_num) c_n 
                                ON p.post_num=c_n.post_num
                            LEFT OUTER JOIN (SELECT COUNT(*) like_cnt, post_num FROM customboard_like_post GROUP BY post_num) l_n
                                ON p.post_num=l_n.post_num
                            LEFT OUTER JOIN (SELECT COUNT(*) fav_cnt, post_num FROM customboard_favorite GROUP BY post_num) f_n
                                ON p.post_num=f_n.post_num
							JOIN Member m 
								ON p.mem_num = m.mem_num 
						WHERE board_num = #{board_num}
							<if test="keyword != '' and keyfield == 'hashtag'">
								 and content LIKE '%' || #{keyword} || '%'
							</if>	
							<if test="keyword != '' and keyfield == 'content'">
								and content LIKE '%' || #{keyword} || '%'
							</if>
							<if test="keyword != '' and keyfield == 'all'"> 
								and content LIKE '%' || #{keyword} || '%' <!--  or hashtag LIKE '%' || #{keyword} || '%' or content LIKE '%' || #{keyword} || '%' -->
							</if>
							ORDER BY p.post_num DESC 
					) board)
				post) 
		<![CDATA[
			WHERE rnum>=#{start} AND rnum <= #{end}
		]]>
	</select>
	
	<!-- 페이징처리를 위한 글 count -->
	<select id="selectRowCount" parameterType="Integer" resultType="integer">
		SELECT
			COUNT(*)
		FROM CustomPost p JOIN CustomBoard b
		ON p.board_num = b.board_num where p.board_num = #{board_num}
	</select>
	
	<!-- 글 작성 -->
	<insert id="insertPost" parameterType="CustomPostVO">
		INSERT INTO customPost(post_num, board_num, mem_num, content, uploadfile, filename, anonymous) 
		VALUES (customPost_seq.nextval, #{board_num}, #{mem_num}, #{content}, #{uploadfile}, #{filename}, #{anonymous})
	</insert>
	
	<!-- 게시글 수정 -->
	<update id="customPostUpdate" parameterType="customPostVO">
		UPDATE CustomPost SET content=#{content}, uploadfile=#{uploadfile}, filename=#{filename}, anonymous=#{anonymous}
		WHERE post_num=#{post_num}
	</update>
	
	
</mapper>